[割り込み]に対する対処をマトリックスでまとめたもの。
 Strong(強い)、Weak(弱い)、Active(能動)、受動(Passive)から取っている。
 ---
 code:matrix
           Strong Weak
  Active     1     2
  Passive    3     4
 :c
 1 「能動的な割り込み」を「強い後回し」にする
 2 「能動的な割り込み」を「弱い後回し」にする
 3 「受動的な割り込み」を「強い後回し」にする
 4 「受動的な割り込み」を「弱い後回し」にする

そもそも割り込み自体を減らすというアプローチ（[盤外戦]）を忘れてはならない。
 が、ここでは、純粋に割り込みに対処するという前提で進める。
 以下、議論において、タスクAとタスクBという言葉を使うことにする。
 タスクAは、今やっているタスクである。
 タスクBは、割り込んできたタスクである。

ActiveStrong
 >「能動的な割り込み」を「強い後回し」にする
 能動的に割り込んできたタスクBを後回しにすること。
 最も過激な方法であり、強固な信頼関係やヒエラルキーがなければ、十中八九対人関係に影響する。
  ただし、丁寧に応対した上で後回しに倒せば、その影響を最小限に押さえられる。これをクッションという。
  あるいは「わかりました。やります」などとその場で受け入れたふりをし、割り込み元がいなくなったところで、（Bではなく）Aを再開することもできる。これを確信犯という。
  どちらも一長一短であり、クッションは自分のパフォーマンスや精神が犠牲となりやすく、確信犯は割り込み元との信頼関係が犠牲となりやすい。もちろん、クッションで済むならそれに越したことはない。どころか、忙しい者や権限を持つ者は、いかにクッションができるかも才能の一つであろう。
  確信犯については、「非常に忙しい」や「よく忘れるのが当たり前」などのキャラクターを確立できれば、そういうものかと受け入れてもらいやすい。内心の印象はさておき、仕事上問題ない程度の人間関係は維持できる。

ActiveWeak
 >「能動的な割り込み」を「弱い後回し」にする
 能動的に割り込んできたタスクBを優先する（今やっているAの方を後回しにする）こと。
 この場合、やるべきことは単純で、あとでAに戻ってきたときにすぐ再開できるよう「Aのコンテキストを記録しておく」だけだ。
  アイデアのメモと同じで、一言書いておくだけでも違う。しかし最適な分量は「後で思い出せる程度に必要最小限」であろう。もちろん難しいのは言うまでもない。 →[メモのジレンマ]
  可能なら絵を書いたり、[物タスク]を配置したり、その時の感情を書いたり、その時触っていたものを目立たせてみたりといったことをしても良い。要は、後でAのコンテキストを思い出せれば良いのだから、使えそうなヒントは何でも残せば良い。一番わかりやすい例は、本のしおりであろう。
  B側に「10秒待って」などといって時間を稼ぐこともできる。
  もし何を書くかピンと来ない場合、[ドッペルゲンガー法]を試してみると良いだろう。
 
