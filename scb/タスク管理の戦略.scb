[個人タスク管理]をおおよそどのように行っていくかという戦略にはパターンがある。
 いくつか紹介しよう。
 これらの発想を参考にすることで、あなたは一から試行錯誤しなくても済む。もちろん、だからといって試行錯誤がなくなるわけではない（[タスク管理は本質的に個人的なもの]である）。

デイラー
 [デイリータスクリスト]など今日やるエリアをつくり、その中にあるタスクを全部やれば今日はおしまいとする。明日以降のエリアも併せてつくることが多い。メリットは区切りつけやすいこととと先送りしやすいこと。デメリットは毎日メンテが要ること（状況がビジーだと機能しなくなる）。

インボクサー
 inbox（未消化のブツを溜める）だけ使うというシンプルなスタイル。頭の良さと迅速な処理が必要。偉い人（権力を持っていて忙しい人）はこれになりがち。[タスク管理の委譲]も兼ねている事が多い。

カレンダラー
 TODOリストのようなリストをつくるよりもカレンダーに頼り、とにかくカレンダーに書いてそのとおりに行動するカレンダー駆動ロボット。会議の多いホワイトワーカー（特に管理職以上）はこれになりがち。カレンダーに載らないタスクはベストエフォート。

スロッター
 時間割駆動。学校のように時間割を組んで、各タスクはその時間内でのみ行うというスタイル。予定が多い者や受動的な者はカレンダラーにならないと成立しないが、そうでなければカレンダーに頼る必要はない。[タイムボックス]や[ポモドーロテクニック]など、これを支援するテクニックは数多くある。
リッチャイルド。必要なタスク――特に[物タスク]やファイルや画像など「タスクを想起するもの」をそばに置いておいて動的に使い分けたり切り替えたりするスタイル。裕福な子供が広い部屋でおもちゃを散らかしているイメージであり、部屋やデスクを散らかしたり、デスクトップをファイルで散らかしたり、ホワイトボードを常設しておいてとにかくメモしたりといったものがこれにあたる。ポイントは「本人の認知特性」「広くて空間的な作業エリア」「使いやすい "タスクを想起するもの"」。

ロボット
 [ルーチンタスク管理]にて日常生活を回す。何を、どれくらいの頻度で、いつ（の時間帯に）行うかを全部管理しており、今日は今日行う分だけやれば良いという境地に至っている。「今日行う分」をどう管理するかについては、管理しない（頭の中で適当に優先順位付けする）派とデイラー派がいる。

イシュイスト
 GitHub Issuesなど[BTS]を使う。1タスク1チケットでとにかくチケットを切り、[属性]を細かく付けることで俯瞰や検索やフィルタリングをしやすくする。元がプロジェクトタスク管理用ツール、特にソフトウェア開発におけるツールであることもあって、イシュイストはソフトウェアエンジニアに多く見られる。

トピッカー
 [Wiki]を使う。元々ページをつくってリンクで繋げるシステムであり、タスク管理というよりは情報管理だが、ここにタスクを入れればタスク管理もできる。具体的には1タスク1ページで表現する。無論、ページだけでは管理機能が圧倒的に足らないため、何らかの形でカバーする必要がある。たとえば私の[sta-scb]は箇条書きとリンクの世界であり、[howm]はリンクとリマインダーの世界である。前者は[VScode]を使うが、後者は[Emacs]を使う。どちらも全文検索が使える（howmの方がシームレスであり手に馴染みやすい）。また、ScrapboxなどSaaSのWikiを使うこともできる（Scrapboxの場合、カバーは「UserScriptによるタスク管理機能の自製」となろう）。

モノリス
 ある一つのファイルやページなど、一つの領域だけで完結させる。たとえばtask.txtをデスクトップにおいて、そこに全部書く。インボクサーほど割り切れず、デイラーほどメリハリもつけられず、トピッカーほどシームフルになれず、リッチャイルドほどシームレスにもなれないという中途半端な立ち位置であるが、ハマる人にはハマる。何をどう書くかも自由だが、1行1タスクで書き並べるようなリストを伴うことが多い。
