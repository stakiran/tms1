
code:bnf
 <page> ::= <nodes>
 <nodes> ::= <node> <nodes> | ""

 <node> ::= <block> | <line>
 <block> ::= <codeblock> | <tableblock>

 <line> ::= <inline-elements>
 <inline-elements> ::= <inline-element> <inline-elements> | ""
 <inline-element> ::= <plain> | <link> | <literal> | <

:c

データ構造
 ルート
  class Page
   nodes: Node[]
 行はノードとして扱う感じ
  class Node
   indent: number
   content: Line
   children: Node[]
 1行内にはnのインライン要素があるという感じ
  class Line
   content: InlineElement[]
 インライン要素は色々あるので、基底を定義してこれを実装させる
  interface InlineElement
  class Plain
  class Link
  class Literal
  class Image
  class CodeStart
  class InCode
  class CodeEnd

ブロックはどう表現する？
 中間言語としては、いちいちstart/in/endなんて意識したくない
ネストはどう表現する？


パース
 一行目から静的に行単位でパースする、でいいんだっけ？🐰
 


✅react使うかで悩んでいる構図
 inbox
  React側 まずは二行の箇条書きを表示する程度でつくればいいのでは
  スクボきほうのデータを直にフロントにもたせてしまうか、中間言語まではパイソンにするか。後者かな。他にもパイソンは使いそうだし。中間言語to、のひとつをリアクトでつくる。インポートするファイル(中間言語データが書かれている)を直につくりたさ……が、なんか微妙。前者でつくりきる方がいいか？もうひとつのコンポーネントにしちゃうとか
 もうフロントにデータ載せて動的に描画するのもアリか？
  いわゆるCSR、client side rendering になるのか？
  Reactって使える？
   使える
   まさにrender()の中でhtml文字列つくってるじゃんね🐰
 ---
 まとめると、
  scb to 中間言語はn言語でつくれる余地がある
   js
   py etc
  中間言語 to HTMLは以下のアプローチが考えられる
   1 何らかの言語でコマンドをつくる
   2 何らかの言語が読める形式に変換し、それを使ってその言語でツールをつくる
   で、react使う案は2になる
    scb to 中間言語して、
    中間言語データを、jsで読める形式にしてreactのpjに入れる
    あとはreactでよしなに、みたいな🐰
 どうしたい？🐰
  reactは何もわからないし、学びながらはきついので、いったんなし
  どちらかと言えば今後のためにもscb to HTMLが欲しい
   コマンドがあるといい
   慣れたpythonで良い

✅scb to 中間言語変換をつくる
 まずはこれをつくる
 で、その後、中間言語 to HTML とか、to Markdownとかすればいい
 中間言語の表現力は、まあHTML相当で良かろう🐰

✅ghpaages or vercel
 docs/ 配下の github pages でいい
  github actions
  面倒くさそうならvercelに逃げる🐰

✅阿部寛レベルの軽いサイトにしたいかも
 [阿部寛ウェブサイトのHTMLソースを見る]
 cssでbulletを消す、マージンとかも調整する
 scrapbox-readerどうしてるっけ？
  [scrapbox-readerを読む]
  ` <div style="margin-left: XXXXem;" class="line">XXXX</div>`でしたわ
  良いアイデア🐰
   これなら箇条書き内にコード記法、も表現できる（コード記法みたいな装飾で見せればいいだけ）
   そもそも箇条書き(ul and li)使わなくなるわけだし
