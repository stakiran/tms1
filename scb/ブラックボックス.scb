[コンテナ]の一種で、中身が見えないセットのこと。

ブラックボックスBの中に、タスク1,2,3を入れたとする。
 通常、タスク管理ではコンテナ＝リストであり、入れたタスクは3つとも見えているであろう。あなたはどのタスクがあるかを知ることができるし、取り出す順番を選ぶこともできる。
 一方、ブラックボックスではそれができない。まず中が見えない（ただし総数が3であることは見えても良い）。次に、取り出すときも中身を選ぶことができない――つまりは無作為に取り出されることになる。

ブラックボックスはまだ実用化されていないが、リストにつきまとう[認知資源]の負荷を抑える効果がある。
 つまり「とにかく空にすればいい」「とにかく出てきたタスクを消化すればいい」と割り切ることで、いちいち俯瞰したり選択したりする手間をなくすのである。

ブラックボックスでタスク管理をしたい場合、自製する必要がある。
 要するに、中身が見えないまま登録できることと、そこからランダムに取り出すことを担保したツールなり仕組みなりを自分でつくる必要がある。既存のタスク管理ツールでこの機能を持つものはおそらく無いであろうから、自製からは逃げられない。
 最もかんたんなのは、アナログの書類のインボックスをブラックボックス化することであろう。中身の見えない箱やらファイルやらを用意し、未処理の書類を放り込む。取り出すときは、適当に取り出して、とにかくそれを処理する。ゼロになったかどうかは、振ることで確認できよう。この単純な例を試してみると、ブラックボックスの効力がわかる（ちなみに「わざわざこんなことするまでもないな」が大半である）。

ちなみに取り出し方はランダムである必要はない。いくつかバリエーションがある。
 ランダム。無作為に取り出す方法である。デジタルならば比較的容易に実装できよう。
 FIFO。先入れ先出しと呼ばれる。先に入れたものが先に取り出されるような構造であり、キューと呼ばれることもある。典型例は列の並び待ちであろう。
 LIFO。後入れ先出しと呼ばれる。後に入れたものが先に取り出されるような構造であり、スタックと呼ばれることもある。物を積み上げると基本的にこれになるであろう（上から順に取り出す）。またブラウザで戻る・進む操作を行うときも、内部的にはこの構造が使われている。
 オートソート。入れたタスクを、特定の観点で自動的にソートする方法である。もちろん自前で実装する必要がある。ソート観点は様々だが、「タスクの文字数が多い順」「タスク名につけている`！`の多い順」「タスク名の昇順」などになるであろう。あまり凝り過ぎるとブラックボックスの意味がなく、どちらかと言えば整然としたリズムを与えるために用いる。

ブラックボックスを本格的に運用する場合は、箱をいかに分けて連携させるかかが肝心である。
 [GTD]ではインボックスに始まり、様々な入れ物（本質的にはリスト[コンテナ]である）に仕分けるが、これと同じことをブラックボックスで行うことになるわけである。
 最も実用的な[ルーチンタスク管理]であろう。たとえば[セクション]ごとにブラックボックスを用意すれば、それは「そのセクション（時間帯）の間に消化するべきタスク」を意味することになり、中身がゼロになるまで機械的に動けばいいだけになる。既に十分育てているならば（→[ルーチンタスクを育てる]）、違和感なくリズミカルに消化していけるはずである。
