[プレーンテキスト]を用いてタスク管理を行うこと
 以下pttmと略すことにする
 PlainText TaskManagement
たとえば todo.txt とか tasks.md みたいなファイルをつくり、一行一タスクで所定のフォーマットで書き、終わったタスクは別ファイルに隔離したり先頭に`x`をつけたりして区別したり……みたいな運用になる

主にプログラマーやITエンジニアが用いる
 彼らは仕事柄、普段からプレーンテキストをよく扱う
 人にもよるが、1日何時間も書いていたり、万文字を超えて書いたりもする
 下手をすれば喋ると同等、あるいはそれ以上に馴染んでしまっている
  し、実際喋らずにコミュニケーションや情報共有を行う能力や要領も持っていることが多い
 プレーンテキストは非常に手慣れた手段である
 タスク情報も扱ってしまおうとするのは、自然であろう

pttmの構成要素は3つある
 1 何で書くか(Tool)
 2 何を書くか(Task)
 3 何に書くか(Target)

1 何で書くか(Tool)とは、何を使って書くかということである。
 テキストエディタとIDEの2種類がある。またPC上で使うもの（ローカル）と、クラウドなどサービスとして使うもの（ウェブ）がある。つまりローカルエディタ、ローカルIDE、ウェブエディタ、ウェブIDEの計4種類が存在する。
  1 ローカルエディタの例: Vim、Emacs、[秀丸エディタ]、SAKURA Editor、mi
  2 ローカルIDEの例: [Visual Studio Code]（通称VSCode）
  3 ウェブエディタの例: [GitHub]
  4 ウェブIDEの例: [GitHub Codespaces]
 1は歴史が古く、20年以上前から続いているものも少なくない。
 2は元々はITエンジニア御用達であったが、最近はそれ以外の層でも使われ始めている。たとえば作家で言えば[藤井太洋がVSCodeで執筆をしている]他、[倉下忠憲もVSCodeのnote記事を書いている]。
 3はウェブ上にアップロードしたファイルを、ウェブ上のエディタで直接編集するというもので、意外と名前が浮かばないが、私はGitHubを挙げておく。が、このGitHub、ゴッリゴリのITエンジニア向けツールである。たぶん一般人でも（pttmとして）使えるツールは無いであろう。あったらぜひ教えてほしい。
 4は最も後発の概念であり、背景は3と同様、「ブラウザだけで使えたらいいよね」であるが、まだITエンジニア向けの域を出ていない。ここで挙げた GitHub Codespaces は、実は内部的には VSCode である。つまりブラウザだけで VSCode が使えるようなものなので、VSCode が使えるなら便利であろう。ただし有償である（時単位で請求される従量課金）。
 pttmを行うのであれば、1か2が良かろう。3と4は、pttmとして使えるようなるまでに相当「技術的な試行錯誤」に勤しむことになるであろう。本質ではない。
  筆者は主に1に頼っている。たまに使う MacBookAir では、良いローカルエディタがないため、2を（VSCodeを）使っている。
  ローカルエディタを使いこなす自身や甲斐性がなければ、おそらく 2022/09/05 現時点では VSCode が良かろう。画面や操作感は IT エンジニア向けらしく無骨であるが、スマホでSNSを使う程度のリテラシーがあれば使いこなせよう。ただし直感的には使えないので、ちゃんと勉強する必要はある。
  もちろん、単にタスクを複数行書き殴れればそれで良い、という程度であれば、メモ帳など付属のエディタでも良い。あるいはPCである必要もない。私はスマホを持っていないが、今どきスマホの方が使えるという人も多かろう。また[ポメラ]のような執筆デバイスもあり、これでpttmを行うことも可能だ。

2 何を書くか(Task)とは、タスクをどう表現するかということである。
 たとえばファイルは1つだけにして1行1タスクで書く（100タスク扱うなら100行）こともできるし、1タスク1ファイル（100タスク扱うなら100ファイル）とすることもできよう。また、同じ[粒度]であっても、タスクの表現方法は「寝室のダンボールを片付ける」「寝室のダンボールを片付ける、実行日=2022/09/05」「寝室のダンボールを片付ける、締切=2022/09/07」「寝室のダンボールを片付ける、締切=2022/09/07、実行記録=……」と無数にある。終わったタスクをどう扱うかについても、`x`をつけるとか`X`をつけるとか✅をつけるとか同じファイルの下の方に移すとか別にファイルに移すなど色々あるのだ。
 参考までに、[todo.txt]というpttmがある。

3 何に書くか(Target)は、2と少し被るが、タスクを書き込む先をどうするかという話である。
 1ファイルにするか、厳選した7つのファイルのうちどれかにするのか、それとも何個でもファイルを書いていいようにするのか。ツールによってはページとかワークスペースとかプロジェクトといった概念も出てくる。

この Tool Task Target の組み合わせ方次第で、pttm のバリエーションは無数にも広がる。
 しかし、本当に途方もなく広がっているかというとそうでもなく、おおよその傾向は存在する。たとえば1行1タスクで扱うという行指向は有名であろう。これはそもそもコンピュータが何かと行指向で構成されているからだ。あるいは1タスク1ファイルも想像はしやすかろう。これもやはり、コンピュータにファイルという単位があるからだ。3行で1タスクとか、4ファイルで1タスクとかいったへんてこな考え方はとうに淘汰されている。
 そういう意味で、pttmはコンピュータありきであり、いかにコンピュータの事情や仕様を知り、歩み寄れるかがポイントとなる。[知的生産]界隈でもたとえば[倉下忠憲]がVSCodeやプログラミング、ツールの自作などコンピュータ向けのトピックを扱っているが、これもパイオニア自らが貪欲に歩みに言っている例と言えよう。
 もし周囲にITエンジニアがいるなら、pttmについて聞いてみると良いだろう。おそらく十人十色の答えが返ってくるはずだ。ただしpttmは造語であり通じないので、「プレーンテキストでタスク管理をしているか？」、もししているなら「どのようにしているか見せてほしい」のように尋ねると良かろう。
